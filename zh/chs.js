/*

 @name    : 锅巴汉化 - Web汉化插件
 @author  : 麦子、JAR、小蓝、好阳光的小锅巴
 @version : V0.6.1 - 2019-07-09
 @website : http://www.g8hh.com

*/

//1.汉化杂项
var cnItems = {
    _OTHER_: [],

    //未分类：
    'Evolve Progress Tracker': '进化成就追踪器',
    'GitHub': '原版追踪器地址',
    'Evolve by Demagorddon': '原版游戏地址',
    'Import Save': '导入存档',
    'Clear Data': '清除数据',
    'All': '所有',
    'Atmosphere': '星球特性',
    'Biome': '生物群系',
    'Challenge': '挑战',
    'Combat': '战斗',
    'Fanaticism': '狂热信仰',
    'Genus': '种群',
    'Perk': '特权',
    'Progression': '游戏进度',
    'Reset': '威望重置',
    'Scenario': '剧情模式',
    'Species': '种族',
    'Unification': '统一',
    'Universe': '宇宙',
    'Other': '其它',
    'All Universes': '所有宇宙',
    'Standard': '标准',
    'Antimatter': '反物质',
    'Evil': '邪恶',
    'Heavy': '高引力',
    'Micro': '微型',
    'All Ratings': '所有星级',
    '0-Challenge': '无星',
    '1-Challenge': '白星',
    '2-Challenge': '铜星',
    '3-Challenge': '银星',
    '4-Challenge': '金星',
    'Unearned': '未获得的',
    'Achievements': '成 就',
    'Feats': '壮 举',
    'Perks': '特 权',


    //描述文本：
    'Apocalypse': '启示录',
    'Wiped yourself out with nuclear weapons': '用核武清除自己。',
    'The vaults didn\'t help': '避难所也救不了你！',
    'Ascended': '飞升',
    'Ascended to a higher plane of existence': '飞升到一个更高的维度层面。',
    'You\'re your own flashlight!': '你是你自己的神！',
    'Dreaded': '畏惧',
    'Ascended without constructing any Dreadnoughts': '不建造任何无畏舰完成飞升。',
    'Did you dread the achievement?': '你是否曾经畏惧这个成就？',
    'Anarchist': '无政府主义者',
    'Initiated a nuclear holocaust with an anarchy government': '在无政府体制下发动核弹重置。',
    'Some people just want to watch the world burn': '有些人只想看着世界燃烧。',
    'Squished': '压瘪',
    'Got crushed in a micro universe': '在微型宇宙中被压碎。',
    'Watch your step': '当心脚下！',
    'Second Evolution': '二次进化',
    'Evolve the same species twice in a row and then worship your ancestors.': '连续两次进化同一种族并狂热崇拜祖先。',
    'Coincidence or ancient hubris?': '巧合还是古老的狂妄自大？',
    'Blackhole? No hole': '黑洞？没有洞！',
    'Didn\'t destroy your planet with an artificial blackhole': '建造 99 个超级对撞机。',
    'Science 1, Fearmongers 0': '懂科学，就无需恐惧。',
    'Heir of Genghis Khan': '成吉思汗的继承人',
    'Have a warmonger penalty of 8% or more.': '拥有 8% 或更多的战争贩子惩罚。',
    'What is best in life? To see your enemies fall before you.': '生活中没有什么比看着敌人倒在你面前更好的事了。',
    'Red Tactician': '红色战术家',
    'Lose 250 soldiers in a single game': '在一轮游戏中失去250名士兵。',
    'Not one step backwards.': '绝不后退一步。',
    'Pacifist': '和平主义者',
    'Achieve unification without ever initiating an attack in your current game run.': '不发动任何战争完成统一。',
    'Make love not war.': '做爱！不要战争！',
    'Neutralized': '消灭',
    'Completely contained the Andromeda threat.': '完全压制了仙女座星云的威胁。',
    'I don\'t want neutral. I want dead.': '我不要中立，我只要尸体。',
    'Paradise': '乐土',
    'Raised your morale to 200%.': '士气提升至 200% 。',
    'Don\'t worry, be happy.': '别担心，开心点。',
    'Scrooge': '守财奴',
    'Accumulated $800 Million Dollars': '资金达到 $800M。',
    'Just don\'t swim in it.': '别在里面游泳。',
    'Madagascar Tree': '马达加斯加树',
    'Evolved nightmarish flesh-eating trees': '进化成噩梦般的食肉树。',
    'Audrey III': '奥黛丽 III',
    'Sharks with Lasers': '鲨鱼与激光',
    'Create sharks with frickin\' lasers': '制造出能发射激光的鲨鱼。',
    'Dr. Evil, I presume?': '我猜是邪恶博士吧？',
    'Godwin\'s law': '高德温法则',
    'Unlock the internet with toxic trolls': '巨魔狂热崇拜先祖蘑菇人并解锁互联网科技。',
    '9-year-olds on the internet': '互联网上的9岁小孩。',
    'Infested Terrans': '受感染的人类',
    'Infested a human with mind controlling parasites': '用精神控制寄生虫感染人类。',
    'For the hive': '为了母巢！',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',



    //原样
    '': '',
    '': '',

}


//需处理的前缀
var cnPrefix = {
    "(-": "(-",
    "(+": "(+",
    "(": "(",
    "-": "-",
    "+": "+",
    " ": " ",
    ": ": "： ",
    "\n": "",
    "                   ": "",
    "                  ": "",
    "                 ": "",
    "                ": "",
    "               ": "",
    "              ": "",
    "             ": "",
    "            ": "",
    "           ": "",
    "          ": "",
    "         ": "",
    "        ": "",
    "       ": "",
    "      ": "",
    "     ": "",
    "    ": "",
    "   ": "",
    "  ": "",
    " ": "",
}

//需处理的后缀
var cnPostfix = {
    ":": "：",
    "：": "：",
    ": ": "： ",
    "： ": "： ",
    " ": "",
    "/s)": "/s)",
    "/s": "/s",
    ")": ")",
    "%": "%",
    "                   ": "",
    "                  ": "",
    "                 ": "",
    "                ": "",
    "               ": "",
    "              ": "",
    "             ": "",
    "            ": "",
    "           ": "",
    "          ": "",
    "         ": "",
    "        ": "",
    "       ": "",
    "      ": "",
    "     ": "",
    "    ": "",
    "   ": "",
    "  ": "",
    " ": "",
    "\n": "",
}

//需排除的，正则匹配
var cnExcludeWhole = [
    /^x?\d+(\.\d+)?[A-Za-z%]{0,2}(\s.C)?\s*$/, //12.34K,23.4 °C
    /^x?\d+(\.\d+)?(e[+\-]?\d+)?\s*$/, //12.34e+4
    /^\s*$/, //纯空格
    /^\d+(\.\d+)?[A-Za-z]{0,2}.?\(?([+\-]?(\d+(\.\d+)?[A-Za-z]{0,2})?)?$/, //12.34M (+34.34K
    /^(\d+(\.\d+)?[A-Za-z]{0,2}\/s)?.?\(?([+\-]?\d+(\.\d+)?[A-Za-z]{0,2})?\/s\stot$/, //2.74M/s (112.4K/s tot
    /^\d+(\.\d+)?(e[+\-]?\d+)?.?\(?([+\-]?(\d+(\.\d+)?(e[+\-]?\d+)?)?)?$/, //2.177e+6 (+4.01+4
    /^(\d+(\.\d+)?(e[+\-]?\d+)?\/s)?.?\(?([+\-]?(\d+(\.\d+)?(e[+\-]?\d+)?)?)?\/s\stot$/, //2.177e+6/s (+4.01+4/s tot
];
var cnExcludePostfix = [
    /:?\s*x?\d+(\.\d+)?(e[+\-]?\d+)?\s*$/, //12.34e+4
    /:?\s*x?\d+(\.\d+)?[A-Za-z]{0,2}$/, //: 12.34K, x1.5
]

//正则替换，带数字的固定格式句子
//纯数字：(\d+)
//逗号：([\d\.,]+)
//小数点：([\d\.]+)
//原样输出的字段：(.+)
var cnRegReplace = new Map([
    [/^(\s*)For Evolve version$/, '$1适用于进化游戏版本'],
]);